package com.example.hm_project.view.activity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;

import androidx.appcompat.app.AppCompatActivity;
import androidx.databinding.DataBindingUtil;

import com.example.hm_project.Command.ClickListener;
import com.example.hm_project.Command.EditTextInput;
import com.example.hm_project.Command.JsonMaker;
import com.example.hm_project.Command.SetDate;
import com.example.hm_project.R;
import com.example.hm_project.Command.InterfaceManager;
import com.example.hm_project.data.LoginJsonData;
import com.example.hm_project.databinding.ActivityFindemailBinding;
import com.example.hm_project.etc.PopupActivity;
import com.example.hm_project.util.CodeManager;
import com.example.hm_project.util.HM_Singleton;
import com.example.hm_project.util.JsonParser;
import com.example.hm_project.util.NetworkManager;

import org.json.JSONArray;

import java.net.URL;

/***
 *  이메일 찾기
 *  1- 날짜 입력 버튼 클릭시 이벤트
 *  2- 이메일 찾기 버튼 클릭시 이벤트
 *  3- 이메일 찾기 성공시 이벤트
 *  4- 빈칸 확인 ( 이메일 찾기 필수정보 입력칸 )
 */

public class FindEmailActivity extends AppCompatActivity {

    private JsonParser jsonParser = HM_Singleton.getInstance(new JsonParser());
    private EditTextInput editTextInput = new EditTextInput();
    private ClickListener clickListener = new ClickListener();
    private SetDate setDate = new SetDate();
    private ActivityFindemailBinding binding;

    private String serverData;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = DataBindingUtil.setContentView(this, R.layout.activity_findemail);
        binding.setActivity(this);

        // 핸드폰번호 형식에 맞는지 검사
        editTextInput.inputPhoneNO(binding.feInputPhoneNo, binding.feErrorPhoneNO);
    }

    // 1 - 날짜 입력 버튼 클릭시 이벤트
    public void onBirthDayClick(View view) {
        setDate.setDate(FindEmailActivity.this, binding.feInputBirthday, binding.feErrorBirthday);
    }

    // 2 - 이메일 찾기 버튼 클릭시 이벤트
    public void onFindEmailClick(View view) {
        if (!feEmpty()) {
            // 이름입력을 안했을 때
            if (EditTextInput.checkNPE(binding.feInputName.getText().toString())) {
                binding.feErrorName.setText("필수 정보입니다.");
            }
            // 핸드폰번호입력을 안했을 때
            if (EditTextInput.checkNPE(binding.feInputPhoneNo.getText().toString())) {
                binding.feErrorPhoneNO.setText("필수 정보입니다.");
            }
            // 생년월일입력을 안했을 때
            if (EditTextInput.checkNPE(binding.feInputBirthday.getText().toString())) {
                binding.feErrorBirthday.setText("필수 정보입니다.");
            }
        } else {
            // 네트워크 연결이 되었는지 확인
            if (NetworkManager.networkCheck(getApplicationContext())) {
                serverCheck(); // 서버가 열렸는지 확인
                if ("Yes".equals(serverData)) { // 서버가 열렸다면 실행
                    try {
                        URL url = new URL("http://218.234.77.97:8080/HairManager/login/FindEmail.jsp");

                        InterfaceManager task = new InterfaceManager(url);
                        String json = JsonMaker.jsonObjectMaker("", "", binding.feInputName.getText().toString(),
                                binding.feInputPhoneNo.getText().toString(), binding.feInputBirthday.getText().toString(), "", "", "", "");
                        String returns = task.execute(json).get(); // 9

                        // 서버에 온 Json 데이터 파싱하기
                        LoginJsonData loginJsonData = jsonParser.jsonParsingFindEmail(returns);

                        String code = loginJsonData.getCode();
                        String userEmail = loginJsonData.getData1();

                        if ("SY_2000".equals(code)) {
                            clickListener.popupEventReturn(FindEmailActivity.this, "아이디 찾기 성공", "아이디 : " + userEmail);
                            Log.i("저장성공", code + " " + userEmail);
                        } else {
                            clickListener.popupEvent(FindEmailActivity.this, "아이디 찾기 실패", "입력정보를 확인해주세요.");
                            Log.i("저장실패", code);
                        }
                    } catch (Exception e) {
                    }
                } else {
                    clickListener.popupEvent(FindEmailActivity.this, "서버 연결 오류", "이메일 찾기 실패");
                }
            } else {
                viewPopup(CodeManager.NewtWork_Error); // 네트워크 연결이 안되었다는 알림 팝업 띄움
            }
        }
    }

    // 3 - 이메일 찾기 성공시 이벤트
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 1) {
            if (resultCode == RESULT_OK) {
                //데이터 받기
                Intent intent = new Intent(FindEmailActivity.this, LoginActivity.class);
                startActivity(intent);
                FindEmailActivity.this.finish();
            }
        }
    }

    // 4 - 빈칸 확인 ( 이메일 찾기 필수정보 입력칸 )
    private boolean feEmpty() {
        if (EditTextInput.checkNPE(binding.feInputName.getText().toString())) {
            return false;
        } else if (EditTextInput.checkNPE(binding.feInputPhoneNo.getText().toString())) {
            return false;
        } else if (binding.feErrorPhoneNO.getText().toString().equals("핸드폰번호 형식에 맞게 입력해주세요.")) {
            return false;
        } else if (EditTextInput.checkNPE(binding.feInputBirthday.getText().toString())) {
            return false;
        } else
            return true;
    }

    private void serverCheck() {
        try {
            URL url = new URL("http://218.234.77.97:8080/HairManager/login/ServerCheck.jsp");

            InterfaceManager task = new InterfaceManager(url);
            serverData = task.execute("").get();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //팝업창 메소드
    private void viewPopup(int CODE) {
        Intent intent = new Intent(getApplicationContext(), PopupActivity.class);
        intent.putExtra("code", CODE);
        startActivity(intent);
    }

    @Override
    public void onBackPressed() {
        //super.onBackPressed();
        clickListener.moveActivity(this, LoginActivity.class);
    }
}